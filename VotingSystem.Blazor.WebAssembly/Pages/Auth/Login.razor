@page "/login"
@using VotingSystem.Blazor.WebAssembly.Services;
@using VotingSystem.Blazor.WebAssembly.ViewModels;
@using VotingSystem.Blazor.WebAssembly.Layout;
@inject NavigationManager NavigationManager
@inject IAuthenticationService AuthenticationService

<div class="my-4 container">

	<h1>Bejelentkezés</h1>


	@if (_tryAutoLogin)
	{
		<p>Try autologin...</p>
	}
	else
	{
		<EditForm Model="LoginViewModel" OnValidSubmit="HandleLogin">
			<DataAnnotationsValidator />

			<div class="mb-3">
				<label class="form-label" for="email">Email:</label>
				<InputText class="form-control form-control" id="email" @bind-Value="LoginViewModel.Email" />
				<ValidationMessage For="@(() => LoginViewModel.Email)" class="text-danger" />
			</div>

			<div class="mb-3">
				<label class="form-label" for="password">Password:</label>
				<InputText class="form-control form-control" id="password" @bind-Value="LoginViewModel.Password" type="password" />
				<ValidationMessage For="@(() => LoginViewModel.Password)" class="text-danger" />
			</div>

			<div class="row">
				<div class="col-2">
					<div class="row">
						<button class="btn btn-primary" type="submit" name="">Bejelentkezés</button>
					</div>
				</div>
			</div>
		</EditForm>
		<div class="row">
			<div class="col-2">
				<div class="row">
					<button class="btn btn-outline-primary mt-2" @onclick=Register>Regisztráció</button>
				</div>
			</div>
		</div>
	}

</div>

@code {

	private LoginViewModel LoginViewModel { get; set; } = new LoginViewModel();
	private bool _tryAutoLogin = true;

	protected override async Task OnInitializedAsync()
	{
		var success = await AuthenticationService.TryAutoLoginAsync();
		if (success)
		{
			NavigationManager.NavigateTo("/topics");
		}
		else
		{
			_tryAutoLogin = false;
		}
	}

	private void Register()
	{
		NavigationManager.NavigateTo("/register");
	}

	private async Task HandleLogin()
	{
		var success = await AuthenticationService.LoginAsync(LoginViewModel);
		if (success)
		{
			NavigationManager.NavigateTo("/topics");
		}
	}
}
